@model PaginatedList<SAC_Web_Application.Models.ClubModel.Events>

@{
    ViewData["Title"] = "Index";
}

<h2>Club Events</h2>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-controller="Events" asp-action="Create" class="btn btn-success">Create New</a>
    </p>
}

<div class="panel panel-default">
    <div class="panel-heading">
        <strong>Event List</strong>
    </div>

    <form asp-action="Index" method="get">
        <div class="form-actions no-color form-inline">
            <br />
            <p style="font-weight: bold" class="col-md-offset-1">
                Search by Name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-xs btn-primary" />
                <a asp-action="Index" class="btn btn-xs btn-primary">Reset List</a>
            </p>
        </div>
    </form>

    <table class="table table-hover table-responsive table-condensed">
        <thead>
            <tr>
                <th>
                    <a style="text-decoration: none; color: black">Event Name</a>
                </th>
                <th>
                    <a style="text-decoration: none; color: black">Date</a>
                </th>
                <th>
                    <a style="text-decoration: none; color: black">Location</a>
                </th>
                <th>
                    <a style="text-decoration: none; color: black">Category</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.EventTitle)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.EventID" class="btn btn-primary btn-xs">Entry Details</a>
                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.EventID" class="btn btn-warning btn-xs">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.EventID" class="btn btn-danger btn-xs">Delete</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
</div>
<div class="form-group">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @prevDisabled btn">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @nextDisabled btn btn-primary">
        Next
    </a>
</div>
<div class="form-group">
    <div>
        <a asp-area="" asp-controller="Home" asp-action="Admin" class="btn btn-primary">Back</a>
    </div>
</div>